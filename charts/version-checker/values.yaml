# Default values for version-checker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# -- Replica Count for version-checker
replicaCount: 1

image:
  # -- Repository of the container image
  repository: nginx
  # -- Set the Image Pull Policy
  pullPolicy: Always
  # -- Override the chart version. Defaults to `appVersion` of the helm chart.
  tag: ""

# Configure version-checkers behaviour
versionChecker:
  allowedNamespaces: []
  configPath: ""


# -- This is for the secrets for pulling an image from a private repository
imagePullSecrets: []
# This is to override the chart name.
# -- Override the Chart Name
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# -- Additional Annotations to apply to Service and Deployment/Pod Objects
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# -- Additional Labels to apply to Service and Deployment/Pod Objects
podLabels: {}
# -- Set pod-level security context
podSecurityContext: {}
  # fsGroup: 1001

# -- Set container-level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Configure version-checkers Service
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # -- Port to expose within the service
  port: 80
  # -- Additional annotations to add to the service
  annotations: {}

secrets:
  existingSecret: ""
  auth:
    name: ""
    path: ""
    type: vault
  config:
    nameConfig: ""

# -- Setup version-checkers resource requests/limits
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Configure the healthcheck probe for version-checker
livenessProbe:
  httpGet:
    # -- Path to use for the livenessProbe
    path: /
    # -- Port to use for the livenessProbe
    port: http
# Configure the readiness probe for version-checker
readinessProbe:
  httpGet:
    # -- Path to use for the readinessProbe
    path: /
    # -- Port to use for the readinessProbe
    port: http

# Additional volumes on the output Deployment definition.
# -- Allow for extra Volumes to be associated to the pod
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
# -- Allow for extra Volume Mounts to version-checkers container
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- Configure nodeSelector
nodeSelector: {}

# -- Configure tolerations
tolerations: []

# -- Set affinity
affinity: {}

# Configure a Prometheus-Operator ServiceMonitor object
serviceMonitor:
  # -- Disable/Enable ServiceMonitor Object
  enabled: true
  # -- Additional labels to add to the ServiceMonitor
  additionalLabels: {}
